{"version":3,"sources":["/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/chat-routing.module.ts","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/chat.module.ts","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/ongoing/ongoing.component.css","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/ongoing/ongoing.component.html","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/ongoing/ongoing.component.ts","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/pending/pending.component.css","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/pending/pending.component.html","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/pending/pending.component.ts","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/rejected/rejected.component.css","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/rejected/rejected.component.html","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/rejected/rejected.component.ts","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/resolve/resolve.component.css","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/resolve/resolve.component.html","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/resolve/resolve.component.ts"],"names":[],"mappings":"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","file":"chat.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router'\nimport { OngoingComponent } from './ongoing/ongoing.component'\nimport { PendingComponent } from './pending/pending.component'\nimport { RejectedComponent } from './rejected/rejected.component'\nimport { ResolveComponent } from './resolve/resolve.component';\n\nconst routes: Routes = [\n  { path: 'pending', component: PendingComponent },\n  { path: 'ongoing', component: OngoingComponent },\n  { path: 'rejected', component: RejectedComponent },\n  { path: 'resolve',  component: ResolveComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChatRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/chat-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ChatRoutingModule } from './chat-routing.module';\nimport { PendingComponent } from './pending/pending.component';\nimport { OngoingComponent } from './ongoing/ongoing.component';\nimport { RejectedComponent } from './rejected/rejected.component';\nimport { ResolveComponent } from './resolve/resolve.component';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { MomentModule } from 'angular2-moment';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ChatRoutingModule,\n    FormsModule,\n    SharedModule,\n    MomentModule\n      \n  ],\n  declarations: [\n    PendingComponent,\n    OngoingComponent,\n    RejectedComponent,\n    ResolveComponent\n  ]\n})\nexport class ChatModule { }\n\n\n// WEBPACK FOOTER //\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/chat.module.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h2{\\n    background: #fff;\\n    text-align: center;\\n    margin: 0;\\n    padding: 15px;\\n    color: #000;\\n    font-size: 20px;\\n    text-transform: uppercase;\\n    letter-spacing: 1px;\\n    box-shadow: 1px 1px 1px 1px #ebebeb;\\n    -webkit-box-shadow: 1px 1px 1px 1px #ebebeb;\\n    -moz-box-shadow: 1px 1px 1px 1px #ebebeb;\\n}\\n.box{\\n    margin-top: 5px;\\n    border: 0;\\n}\\n.chat-list{\\n    display: inline-block;\\n    width: 100%;\\n}\\n.chat-list ul{\\n    margin: 5px 0 0;\\n    padding: 0;\\n    list-style-type: none;\\n    background: #fff;\\n    max-height: 705px;\\n    overflow-y: auto;\\n    border-radius: 3px;\\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);\\n}\\n.chat-list ul li{\\n    display: inline-block;\\n    width: 100%;\\n    padding: 15px 0;\\n    border-bottom: 1px solid #f4f4f4;\\n    cursor: pointer;\\n    vertical-align: top;\\n}\\n.chat-list ul li:last-child{\\n    border: 0;\\n}\\n.chat-list ul li:hover, .chat-list ul li.active {\\n    background: #3c8dbc;\\n    box-shadow: 1px 1px 1px 1px #666;\\n    border-bottom: 1px solid #3c8dbc;\\n}\\n.chat-head img{\\n    border-radius: 50%;\\n    margin: auto;\\n    width: 40px;\\n    height: 40px;\\n}\\n.chat-content h3{\\n    margin: 0 0 5px;\\n    font-size: 16px;\\n    font-weight: bold;\\n    color: #3c8dbc;\\n}\\n.chat-content h3 span{\\n    float: right;\\n    font-weight: normal;\\n    font-size: 12px;\\n    color: #000;\\n}\\n.chat-list ul li:hover h3,.chat-list ul li.active h3{\\n    color: #fff;\\n}\\n.chat-list ul li:hover h3 span, .chat-list ul li.active h3 span{\\n    color: #fff;\\n}\\n.chat-list ul li:hover p, .chat-list ul li.active p{\\n    color: #fff;\\n}\\n.chat-box{\\n    padding: 20px;\\n}\\n.receiver, .sender{\\n    display: inline-block;\\n    width: 100%;\\n    padding: 20px 0;\\n}\\n.sender .chat-content{\\n    text-align: right;\\n    border-radius: 5px;\\n}\\n.receiver .chat-content{\\n    background: #3c8dbc;\\n    color: #fff;\\n    padding: 15px;\\n    border-radius: 5px;\\n}\\n.sender .chat-content p, .receiver .chat-content p {\\n    margin: 0;\\n}\\n.direct-chat-msg {\\n    margin-bottom: 20px;\\n}\\n.direct-chat-messages {\\n    height: 500px;\\n}\\n\\n.dropdown-submenu {\\n    position: relative;\\n    text-align: center;\\n    border-bottom: 1px solid #eee;\\n    padding: 5px;\\n}\\n.dropdown-submenu:last-child {\\n    border: none;\\n}\\n\\n.chat-btn{\\n    margin: 10px 20px 20px;\\n}\\n\\n.chat-btn .target-drop{\\n    display: inline-block;\\n}\\n.dropdown-submenu a{\\n    color: #666;\\n}\\n.open>.dropdown-menu {\\n    display: block;\\n}\\n\\n.dropdown-submenu .dropdown-menu {\\n    top: 0;\\n    left: 100%;\\n    margin-top: -1px;\\n    text-align: center;\\n}\\n.dropdown-submenu .dropdown-menu li {\\n    border-bottom: 1px solid #eee;\\n}\\n.dropdown-submenu .dropdown-menu li:last-child {\\n    border: none;\\n}\\n.show {\\n    display: block;\\n}\\n\\na {\\n    cursor: pointer;\\n}\\n\\n\\n\\n\\n\\n\\n\\n.super-sub{display: none;}\\n\\nli.dropdown-submenu li:hover .super-sub{display: block}\\nul.super-sub{padding: 0;\\n    margin: 0;\\n    position: absolute;\\n    right: -188px;\\n    width: 194px;\\n    background: #fff;\\n    border: 1px solid rgba(0,0,0,.15);\\n    top: 4px;\\n}\\nul.super-sub li{list-style: none; padding: 4px 0;}\\nul.super-sub li a{display: block;}\\nul.super-sub li:hover{background: #e1e3e9;}\\n\\n\\n.btn-disabled,.btn-disabled[disabled] {\\n    opacity: .4;\\n    cursor: not-allowed;\\n    pointer-events: none;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/ongoing/ongoing.component.css\n// module id = ../../../../../src/app/core/layout/inner-pages/chat/ongoing/ongoing.component.css\n// module chunks = chat.module","module.exports = \"<div class=\\\"content-wrapper\\\">\\n    <section class=\\\"content-header\\\">\\n        <h1>Ongoing Chats</h1>\\n        <ol class=\\\"breadcrumb\\\">\\n            <li><a routerLink=\\\"/dashboard\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>\\n            <li><a href=\\\"javascript:void(0)\\\">Ongoing Chats</a></li>\\n            <li class=\\\"active\\\">Chat</li>\\n        </ol>\\n    </section>\\n    <section class=\\\"content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n                <div class=\\\"box\\\">\\n                    <div class=\\\"col-xs-12\\\">\\n                        <div class=\\\"row\\\">\\n                            <h2>Messages</h2>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngIf=\\\"!!(showChats() | async).length\\\">\\n                            <div class=\\\"col-md-3 col-sm-3\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"chat-list\\\">\\n                                        <ul>\\n                                            <ng-container\\n                                                    *ngFor=\\\"let contact of (chatState | async).ongoing; let i = index;\\\">\\n                                                <li [ngClass]=\\\"{ active : currentChatIndex == i}\\\"\\n                                                    *ngIf=\\\"contact.status != 3 && contact.status != 5   && contact.status == 2\\\"\\n                                                    (click)=\\\"changeCurrentChat(i)\\\">\\n                                                    <div class=\\\"col-md-2\\\">\\n                                                        <div class=\\\"chat-head row\\\">\\n                                                            <img src=\\\"../../../../assets/img/avatar5.png\\\"\\n                                                                 class=\\\"img-responsive\\\">\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"col-md-10\\\">\\n                                                        <div class=\\\"chat-content\\\">\\n                                                            <h3>{{contact.client}} <span>{{contact.chatTime.date | amFromUtc | amLocal | amTimeAgo}}</span>\\n                                                            </h3>\\n                                                            <p>{{contact.room}}</p>\\n                                                        </div>\\n                                                    </div>\\n                                                </li>\\n                                            </ng-container>\\n                                        </ul>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-9 col-sm-9\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"box box-primary direct-chat direct-chat-primary\\\">\\n                                        <div class=\\\"box-body\\\">\\n                                            <div class=\\\"chat-btn\\\">\\n                                                <div *ngIf=\\\"(chatState | async).ongoing[currentChatIndex]?.status == 2\\\">\\n                                                    <button (click)=\\\"onSomeMsgAction(5)\\\" class=\\\"btn btn-success\\\">Resolve\\n                                                        Chat\\n                                                    </button>\\n                                                    <div class=\\\"dropdown target-drop\\\" [appDropdown]=\\\"'open'\\\"\\n                                                         [disable-hover]=\\\"true\\\">\\n                                                        <button class=\\\"btn btn-default dropdown-toggle\\\"\\n                                                                type=\\\"button\\\" data-toggle=\\\"dropdown\\\">\\n                                                            Transfer\\n                                                            <span class=\\\"caret\\\"></span>\\n                                                        </button>\\n                                                        <ul class=\\\"dropdown-menu\\\">\\n                                                            <li class=\\\"dropdown-submenu\\\"\\n                                                                *ngFor=\\\"let department of (chatState | async).agentList; let i = index;\\\">\\n                                                                <div class=\\\"dropdown\\\" [appDropdown]=\\\"'open'\\\"\\n                                                                     [disable-hover]=\\\"false\\\">\\n                                                                    <a class=\\\"test\\\" tabindex=\\\"-1\\\">{{\\n                                                                        department.department_name }} <span\\n                                                                                class=\\\"caret\\\"></span></a>\\n                                                                    <ul class=\\\"dropdown-menu\\\">\\n                                                                        <li><a tabindex=\\\"-1\\\"\\n                                                                               (click)=\\\"transferChatToDepartment(department.department_id)\\\">Transfer\\n                                                                            to department </a></li>\\n                                                                        <li class=\\\"dropdown-submenu\\\">\\n                                                                            <a tabindex=\\\"-1\\\">Transfer to agent </a>\\n                                                                            <ul class=\\\"super-sub\\\">\\n                                                                                <li *ngFor=\\\"let agent of department.agent\\\">\\n                                                                                    <a tabindex=\\\"-1\\\"\\n                                                                                       (click)=\\\"transferChatToAgent(agent.agent_id)\\\"\\n                                                                                       [ngClass]=\\\"(agent.agent_id === agentId)? 'btn-disabled' : ''\\\">\\n                                                                                        {{ agent.first_name }} </a>\\n                                                                                </li>\\n                                                                            </ul>\\n                                                                        </li>\\n                                                                    </ul>\\n                                                                </div>\\n                                                            </li>\\n                                                        </ul>\\n                                                    </div>\\n                                                </div>\\n                                                <!-- Conversations are loaded here -->\\n                                                <!--<div class=\\\"direct-chat-messages\\\" #scrollChat [scrollTop]=\\\"scrollChat.scrollHeight\\\">-->\\n                                                <div class=\\\"direct-chat-messages\\\">\\n                                                    <!-- Message. Default to the left -->\\n                                                    <div class=\\\"direct-chat-msg\\\"\\n                                                         [ngClass]=\\\"{ right: chat.direction == 2 }\\\"\\n                                                         *ngFor=\\\"let chat of (chatState | async).ongoing[currentChatIndex]?.chats\\\">\\n                                                        <div class=\\\"direct-chat-info clearfix\\\">\\n                                                            <span class=\\\"direct-chat-name\\\"\\n                                                                  [ngClass]=\\\"chat.direction == 2 ? 'pull-right' : 'pull-left'\\\">{{chat.user}}</span>\\n                                                            <span class=\\\"direct-chat-timestamp\\\"\\n                                                                  [ngClass]=\\\"chat.direction == 1 ? 'pull-right' : 'pull-left'\\\"> {{chat.created_at.date | amFromUtc | amLocal | amTimeAgo }} </span>\\n                                                        </div>\\n                                                        <img class=\\\"direct-chat-img\\\"\\n                                                             [src]=\\\"chat.direction == 2 ?  '../../../../assets/img/user1-128x128.jpg' : '../../../../assets/img/user3-128x128.jpg'\\\"\\n                                                             alt=\\\"Message User Image\\\"><!-- /.direct-chat-img -->\\n                                                        <div class=\\\"direct-chat-text\\\">\\n                                                            {{chat.message}}\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                            <!--/.direct-chat-messages-->\\n\\n                                        </div>\\n                                        <!-- /.box-body -->\\n                                        <div class=\\\"box-footer\\\"\\n                                             *ngIf=\\\"(chatState | async).ongoing[currentChatIndex]?.status != 1\\\">\\n                                            <form #form=\\\"ngForm\\\" (submit)=\\\"sendMsg(form)\\\">\\n                                                <div class=\\\"input-group\\\">\\n                                                    <input type=\\\"text\\\"\\n                                                           name=\\\"messageBody\\\"\\n                                                           placeholder=\\\"Type Message ...\\\"\\n                                                           class=\\\"form-control\\\"\\n                                                           ngModel\\n                                                           required\\n                                                    >\\n                                                    <span class=\\\"input-group-btn\\\">\\n                        <button type=\\\"button\\\"\\n                                [disabled]=\\\"!form.invalid\\\"\\n                                class=\\\"btn btn-default btn-flat\\\">\\n                          <i class=\\\"fa fa-paperclip\\\" aria-hidden=\\\"true\\\"></i>\\n                        </button>\\n                        <button type=\\\"submit\\\"\\n                                [disabled]=\\\"form.invalid\\\"\\n                                class=\\\"btn btn-primary btn-flat\\\">\\n                          Send\\n                        </button>\\n                      </span>\\n                                                </div>\\n                                            </form>\\n                                        </div>\\n                                        <!-- /.box-footer-->\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <!--<div class=\\\"row\\\" *ngIf=\\\"!(chatState | async).ongoing.length\\\">-->\\n                        <!--<h2>No Ongoing Chats at this Moment!</h2>-->\\n                        <!--</div>-->\\n\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"box box-primary\\\">\\n                                <div class=\\\"box-body\\\" *ngIf=\\\"!(showChats() | async).length\\\">\\n                                    <h4>No Ongoing Chats at this Moment!</h4>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <!-- /.box -->\\n            </div>\\n            <!-- /.col -->\\n        </div>\\n        <!-- /.row -->\\n    </section>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/ongoing/ongoing.component.html\n// module id = ../../../../../src/app/core/layout/inner-pages/chat/ongoing/ongoing.component.html\n// module chunks = chat.module","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\nimport { ChatService } from '../chat.service';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/take';\nimport * as fromAfterLogin from '../../../store/after-login.reducers';\nimport * as ChatActions from '../../../store/chat/chat.actions';\nimport * as fromChat from '../../../store/chat/chat.reducers';\n\n@Component({\n  selector: 'app-ongoing',\n  templateUrl: './ongoing.component.html',\n  styleUrls: ['./ongoing.component.css']\n})\n\nexport class OngoingComponent implements OnInit, OnDestroy {\n\n  chatState: Observable<fromChat.ChatState>;\n  currentChatIndex: number = 0;\n  currentChatRoom: string = '';\n  chatRoomSubscription: Subscription;\n  agentId: number;\n  toAgentId : number;\n  departmentId : number;\n  transferData : any;\n  \n  \n  constructor(private store: Store<fromAfterLogin.AfterLoginFeatureState>,\n              private chatService: ChatService,private activatedRoute: ActivatedRoute, private router: Router) { }\n  \n  ngOnInit() {\n    this.chatService.connect();\n    this.chatState = this.store.select('afterLogin').map(data => data.chat);\n    this.getChatRoom();\n    this.store.dispatch(new ChatActions.GetTransferAgentListAttempt({ chatRoomId : this.currentChatRoom}));\n    this.store.select('auth')\n        .take(1)\n        .map(data => data.userId)\n        .distinctUntilChanged()\n        .subscribe(\n            (id) => {\n              this.agentId = id;\n            }\n        );\n  }\n\n  changeCurrentChat(i: number) {\n    this.currentChatIndex = i;\n    this.getChatRoom();\n    this.store.dispatch(new ChatActions.GetTransferAgentListAttempt({ chatRoomId : this.currentChatRoom}));\n\n  }\n\n  transferChatToAgent(i: number) {\n    this.toAgentId = i;\n    this.transferData = { agentId: this.agentId, status: 4, chatRoomId: this.currentChatRoom , toAgentId : this.toAgentId};\n    this.onSomeMsgAction(4);\n  }\n\n  transferChatToDepartment(i: number) {\n    this.departmentId = i;\n    this.transferData = { agentId: this.agentId, status: 4, chatRoomId: this.currentChatRoom , departmentId : this.departmentId};\n    this.onSomeMsgAction(4);\n  }\n\n  onSomeMsgAction(status: number) {\n    switch(status) {\n      case 2:\n        this.chatService.takeAction({ agentId: this.agentId, status: status, chatRoomId: this.currentChatRoom });\n        break;\n      case 3:\n        this.chatService.takeAction({ agentId: this.agentId, status: status, chatRoomId: this.currentChatRoom });\n        break;\n      case 4:\n        this.chatService.takeAction(this.transferData);\n        this.changeCurrentChat(0);\n        break;\n      case 5:\n        this.chatService.takeAction({ agentId: this.agentId, status: status, chatRoomId: this.currentChatRoom });\n        this.changeCurrentChat(0);\n          this.router.navigate(['/chat/resolve']);\n        break;\n      default:\n        console.log(status);\n    }\n  }\n\n  getChatRoom() {\n    this.chatRoomSubscription = this.store.select('afterLogin')\n        .subscribe(\n            data => {\n              if (data.chat.ongoing[this.currentChatIndex] && !data.chat.ongoing[this.currentChatIndex].length) {\n                this.currentChatRoom = data.chat.ongoing[this.currentChatIndex].room;\n              }\n            });\n  }\n\n  sendMsg(form: NgForm) {\n    this.chatService.sendMsg({ ...form.value, chatRoomId: this.currentChatRoom });\n    form.reset();\n  }\n\n  /** Show chats id status is not 3 or 5 */\n  showChats() {\n    return this.store.select('afterLogin')\n      .map(data => data.chat)\n      .map(chats => chats.ongoing.filter(chat => chat.status != 3 && chat.status != 5 ));\n  }\n\n  getLoggedInAgentDetails() {\n    return this.chatService.getLoggedInAgentDetails();\n  }\n\n  ngOnDestroy() {\n    this.chatRoomSubscription.unsubscribe();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/ongoing/ongoing.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h2{\\n    background: #fff;\\n    text-align: center;\\n    margin: 0;\\n    padding: 15px;\\n    color: #000;\\n    font-size: 20px;\\n    text-transform: uppercase;\\n    letter-spacing: 1px;\\n    box-shadow: 1px 1px 1px 1px #ebebeb;\\n    -webkit-box-shadow: 1px 1px 1px 1px #ebebeb;\\n    -moz-box-shadow: 1px 1px 1px 1px #ebebeb;\\n}\\n.box{\\n    margin-top: 5px;\\n    border: 0;\\n}\\n.chat-list{\\n    display: inline-block;\\n    width: 100%;\\n}\\n.chat-list ul{\\n    margin: 5px 0 0;\\n    padding: 0;\\n    list-style-type: none;\\n    background: #fff;\\n    max-height: 705px;\\n    overflow-y: auto;\\n    border-radius: 3px;\\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);\\n}\\n.chat-list ul li{\\n    display: inline-block;\\n    width: 100%;\\n    padding: 15px 0;\\n    border-bottom: 1px solid #f4f4f4;\\n    cursor: pointer;\\n    vertical-align: top;\\n}\\n.chat-list ul li:last-child{\\n    border: 0;\\n}\\n.chat-list ul li:hover{\\n    background: #3c8dbc;\\n    box-shadow: 1px 1px 1px 1px #666;\\n    border-bottom: 1px solid #3c8dbc;\\n}\\n.chat-head img{\\n    border-radius: 50%;\\n    margin: auto;\\n    width: 40px;\\n    height: 40px;\\n}\\n.chat-content h3{\\n    margin: 0 0 5px;\\n    font-size: 16px;\\n    font-weight: bold;\\n    color: #3c8dbc;\\n}\\n.chat-content h3 span{\\n    float: right;\\n    font-weight: normal;\\n    font-size: 12px;\\n    color: #000;\\n}\\n.chat-list ul li:hover h3{\\n    color: #fff;\\n}\\n.chat-list ul li:hover h3 span{\\n    color: #fff;\\n}\\n.chat-list ul li:hover p{\\n    color: #fff;\\n}\\n.chat-box{\\n    padding: 20px;\\n}\\n.receiver, .sender{\\n    display: inline-block;\\n    width: 100%;\\n    padding: 20px 0;\\n}\\n.sender .chat-content{\\n    text-align: right;\\n    border-radius: 5px;\\n}\\n.receiver .chat-content{\\n    background: #3c8dbc;\\n    color: #fff;\\n    padding: 15px;\\n    border-radius: 5px;\\n}\\n.sender .chat-content p, .receiver .chat-content p {\\n    margin: 0;\\n}\\n.direct-chat-msg {\\n    margin-bottom: 20px;\\n}\\n.direct-chat-messages {\\n    height: 650px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/pending/pending.component.css\n// module id = ../../../../../src/app/core/layout/inner-pages/chat/pending/pending.component.css\n// module chunks = chat.module","module.exports = \"<div class=\\\"content-wrapper\\\">\\n    <section class=\\\"content-header\\\">\\n        <h1>Pending Chats</h1>\\n        <ol class=\\\"breadcrumb\\\">\\n            <li><a routerLink=\\\"/dashboard\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>\\n            <li><a href=\\\"javascript:void(0)\\\">Pending Chats</a></li>\\n            <li class=\\\"active\\\">Chat</li>\\n        </ol>\\n    </section>\\n    <section class=\\\"content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n                <div class=\\\"box\\\">\\n                    <div class=\\\"col-xs-12\\\">\\n                        <div class=\\\"row\\\">\\n                            <h2>Messages</h2>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngIf=\\\"!!(showChats() | async).length\\\">\\n                            <div class=\\\"col-md-3 col-sm-3\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"chat-list\\\">\\n                                        <ul>\\n                                            <ng-container\\n                                                    *ngFor=\\\"let contact of (chatState | async).ongoing; let i = index;\\\">\\n                                                <li [ngClass]=\\\"{ active : currentChatIndex == i}\\\"\\n                                                    (click)=\\\"changeCurrentChat(i)\\\" *ngIf=\\\"contact.status == 1\\\">\\n                                                    <div class=\\\"col-md-2\\\">\\n                                                        <div class=\\\"chat-head row\\\">\\n                                                            <img src=\\\"../../../../assets/img/avatar5.png\\\"\\n                                                                 class=\\\"img-responsive\\\">\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"col-md-10\\\">\\n                                                        <div class=\\\"chat-content\\\">\\n                                                            <h3>{{contact.client}} <span>{{contact.chatTime.date | amFromUtc | amLocal | amTimeAgo}} </span>\\n                                                            </h3>\\n                                                            <p>{{contact.room}}</p>\\n                                                        </div>\\n                                                    </div>\\n                                                </li>\\n                                            </ng-container>\\n                                        </ul>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-9 col-sm-9\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"box box-primary direct-chat direct-chat-primary\\\">\\n                                        <div class=\\\"box-body\\\">\\n                                            <div class=\\\"chat-btn\\\">\\n                                                <!--<div *ngIf=\\\"(chatState | async).ongoing[currentChatIndex]?.status == 2\\\">-->\\n                                                <!--<button (click)=\\\"onSomeMsgAction(5)\\\" class=\\\"btn btn-success\\\">Resolve Chat</button>-->\\n                                                <!--<div class=\\\"dropdown target-drop\\\" [appDropdown]=\\\"'open'\\\" [disable-hover]=\\\"true\\\" >-->\\n                                                <!--<button class=\\\"btn btn-default dropdown-toggle\\\"-->\\n                                                <!--type=\\\"button\\\" data-toggle=\\\"dropdown\\\">-->\\n                                                <!--Transfer-->\\n                                                <!--<span class=\\\"caret\\\"></span>-->\\n                                                <!--</button>-->\\n                                                <!--<ul class=\\\"dropdown-menu\\\">-->\\n                                                <!--<li class=\\\"dropdown-submenu\\\" *ngFor=\\\"let department of (chatState | async).agentList; let i = index;\\\">-->\\n                                                <!--<div class=\\\"dropdown\\\" [appDropdown]=\\\"'open'\\\" [disable-hover]=\\\"false\\\">-->\\n                                                <!--<a class=\\\"test\\\" tabindex=\\\"-1\\\">{{ department.department_name }}  <span class=\\\"caret\\\"></span></a>-->\\n                                                <!--<ul class=\\\"dropdown-menu\\\">-->\\n                                                <!--<li><a tabindex=\\\"-1\\\" (click)=\\\"transferChatToDepartment(department.department_id)\\\">Transfer to department </a></li>-->\\n                                                <!--<li class=\\\"dropdown-submenu\\\">-->\\n                                                <!--<a tabindex=\\\"-1\\\" >Transfer to agent </a>-->\\n                                                <!--<ul class=\\\"super-sub\\\">-->\\n                                                <!--<li *ngFor=\\\"let agent of department.agent\\\">-->\\n                                                <!--<a tabindex=\\\"-1\\\" (click)=\\\"transferChatToAgent(agent.agent_id)\\\" [ngClass]=\\\"(agent.agent_id === agentId)? 'btn-disabled' : ''\\\"> {{ agent.first_name }}  </a>-->\\n                                                <!--</li>-->\\n                                                <!--</ul>-->\\n                                                <!--</li>-->\\n                                                <!--</ul>-->\\n                                                <!--</div>-->\\n                                                <!--</li>-->\\n                                                <!--</ul>-->\\n                                                <!--</div>-->\\n                                                <!--</div>-->\\n                                                <!-- Conversations are loaded here -->\\n                                                <div class=\\\"direct-chat-messages\\\">\\n                                                    <!-- Message. Default to the left -->\\n                                                    <div *ngIf=\\\"(chatState | async).ongoing[currentChatIndex]?.status == 1\\\">\\n                                                        <button (click)=\\\"onSomeMsgAction(2)\\\" class=\\\"btn btn-primary\\\">\\n                                                            Accept\\n                                                        </button>\\n                                                        <button (click)=\\\"onSomeMsgAction(3)\\\" class=\\\"btn btn-danger\\\">\\n                                                            Reject\\n                                                        </button>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                            <!--/.direct-chat-messages-->\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <!--<div class=\\\"row\\\" *ngIf=\\\"!(chatState | async).ongoing.length\\\">-->\\n                        <!--<h2>No Ongoing Chats at this Moment!</h2>-->\\n                        <!--</div>-->\\n\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"box box-primary\\\">\\n                                <div class=\\\"box-body\\\" *ngIf=\\\"!(showChats() | async).length\\\">\\n                                    <h4>No Pending Chats at this Moment!</h4>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <!-- /.box -->\\n            </div>\\n            <!-- /.col -->\\n        </div>\\n        <!-- /.row -->\\n    </section>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/pending/pending.component.html\n// module id = ../../../../../src/app/core/layout/inner-pages/chat/pending/pending.component.html\n// module chunks = chat.module","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\nimport { ChatService } from '../chat.service';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/take';\nimport * as fromAfterLogin from '../../../store/after-login.reducers';\nimport * as ChatActions from '../../../store/chat/chat.actions';\nimport * as fromChat from '../../../store/chat/chat.reducers';\n\n@Component({\n  selector: 'app-pending',\n  templateUrl: './pending.component.html',\n  styleUrls: ['./pending.component.css']\n})\nexport class PendingComponent implements OnInit, OnDestroy {\n\n    chatState: Observable<fromChat.ChatState>;\n    currentChatIndex: number = 0;\n    currentChatRoom: string = '';\n    chatRoomSubscription: Subscription;\n    agentId: number;\n    toAgentId : number;\n    departmentId : number;\n    transferData : any;\n\n\n    constructor(private store: Store<fromAfterLogin.AfterLoginFeatureState>,\n                private chatService: ChatService,   private activatedRoute: ActivatedRoute, private router: Router) { }\n\n    ngOnInit() {\n        this.chatService.connect();\n        this.chatState = this.store.select('afterLogin').map(data => data.chat);\n        this.getChatRoom();\n        this.store.dispatch(new ChatActions.GetTransferAgentListAttempt({ chatRoomId : this.currentChatRoom}));\n        this.store.select('auth')\n            .take(1)\n            .map(data => data.userId)\n            .distinctUntilChanged()\n            .subscribe(\n                (id) => {\n                    this.agentId = id;\n                }\n            );\n    }\n\n    changeCurrentChat(i: number) {\n        this.currentChatIndex = i;\n        this.getChatRoom();\n        this.store.dispatch(new ChatActions.GetTransferAgentListAttempt({ chatRoomId : this.currentChatRoom}));\n\n    }\n\n    transferChatToAgent(i: number) {\n        this.toAgentId = i;\n        this.transferData = { agentId: this.agentId, status: 4, chatRoomId: this.currentChatRoom , toAgentId : this.toAgentId};\n        this.onSomeMsgAction(4);\n    }\n\n    transferChatToDepartment(i: number) {\n        this.departmentId = i;\n        this.transferData = { agentId: this.agentId, status: 4, chatRoomId: this.currentChatRoom , departmentId : this.departmentId};\n        this.onSomeMsgAction(4);\n    }\n\n    onSomeMsgAction(status: number) {\n        switch(status) {\n            case 2:\n                this.chatService.takeAction({ agentId: this.agentId, status: status, chatRoomId: this.currentChatRoom });\n                /** redirect to the ongoing chat page */\n                location.href = '/chat/ongoing';\n                break;\n            case 3:\n                this.chatService.takeAction({ agentId: this.agentId, status: status, chatRoomId: this.currentChatRoom });\n                break;\n            case 4:\n                this.chatService.takeAction(this.transferData);\n                this.changeCurrentChat(0);\n                break;\n            case 5:\n                this.chatService.takeAction({ agentId: this.agentId, status: status, chatRoomId: this.currentChatRoom });\n                this.changeCurrentChat(0);\n                break;\n            default:\n                console.log(status);\n        }\n    }\n\n    getChatRoom() {\n        this.chatRoomSubscription = this.store.select('afterLogin')\n            .subscribe(\n                data => {\n                    if (data.chat.ongoing[this.currentChatIndex] && !data.chat.ongoing[this.currentChatIndex].length) {\n                        this.currentChatRoom = data.chat.ongoing[this.currentChatIndex].room;\n                    }\n                });\n    }\n\n    sendMsg(form: NgForm) {\n        this.chatService.sendMsg({ ...form.value, chatRoomId: this.currentChatRoom });\n        form.reset();\n    }\n\n    /** Show chats id status is 5 */\n    showChats() {\n        return this.store.select('afterLogin')\n            .map(data => data.chat)\n            .map(chats => chats.ongoing.filter(chat => chat.status == 1 ));\n    }\n\n    getLoggedInAgentDetails() {\n        return this.chatService.getLoggedInAgentDetails();\n    }\n\n    ngOnDestroy() {\n        this.chatRoomSubscription.unsubscribe();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/pending/pending.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h2{\\n    background: #fff;\\n    text-align: center;\\n    margin: 0;\\n    padding: 15px;\\n    color: #000;\\n    font-size: 20px;\\n    text-transform: uppercase;\\n    letter-spacing: 1px;\\n    box-shadow: 1px 1px 1px 1px #ebebeb;\\n    -webkit-box-shadow: 1px 1px 1px 1px #ebebeb;\\n    -moz-box-shadow: 1px 1px 1px 1px #ebebeb;\\n}\\n.box{\\n    margin-top: 5px;\\n    border: 0;\\n}\\n.chat-list{\\n    display: inline-block;\\n    width: 100%;\\n}\\n.chat-list ul{\\n    margin: 5px 0 0;\\n    padding: 0;\\n    list-style-type: none;\\n    background: #fff;\\n    max-height: 705px;\\n    overflow-y: auto;\\n    border-radius: 3px;\\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);\\n}\\n.chat-list ul li{\\n    display: inline-block;\\n    width: 100%;\\n    padding: 15px 0;\\n    border-bottom: 1px solid #f4f4f4;\\n    cursor: pointer;\\n    vertical-align: top;\\n}\\n.chat-list ul li:last-child{\\n    border: 0;\\n}\\n.chat-list ul li:hover{\\n    background: #3c8dbc;\\n    box-shadow: 1px 1px 1px 1px #666;\\n    border-bottom: 1px solid #3c8dbc;\\n}\\n.chat-head img{\\n    border-radius: 50%;\\n    margin: auto;\\n    width: 40px;\\n    height: 40px;\\n}\\n.chat-content h3{\\n    margin: 0 0 5px;\\n    font-size: 16px;\\n    font-weight: bold;\\n    color: #3c8dbc;\\n}\\n.chat-content h3 span{\\n    float: right;\\n    font-weight: normal;\\n    font-size: 12px;\\n    color: #000;\\n}\\n.chat-list ul li:hover h3{\\n    color: #fff;\\n}\\n.chat-list ul li:hover h3 span{\\n    color: #fff;\\n}\\n.chat-list ul li:hover p{\\n    color: #fff;\\n}\\n.chat-box{\\n    padding: 20px;\\n}\\n.receiver, .sender{\\n    display: inline-block;\\n    width: 100%;\\n    padding: 20px 0;\\n}\\n.sender .chat-content{\\n    text-align: right;\\n    border-radius: 5px;\\n}\\n.receiver .chat-content{\\n    background: #3c8dbc;\\n    color: #fff;\\n    padding: 15px;\\n    border-radius: 5px;\\n}\\n.sender .chat-content p, .receiver .chat-content p {\\n    margin: 0;\\n}\\n.direct-chat-msg {\\n    margin-bottom: 20px;\\n}\\n.direct-chat-messages {\\n    height: 650px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/rejected/rejected.component.css\n// module id = ../../../../../src/app/core/layout/inner-pages/chat/rejected/rejected.component.css\n// module chunks = chat.module","module.exports = \"<div class=\\\"content-wrapper\\\">\\n    <section class=\\\"content-header\\\">\\n        <h1>Rejected Chats</h1>\\n        <ol class=\\\"breadcrumb\\\">\\n            <li><a routerLink=\\\"/dashboard\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>\\n            <li><a href=\\\"javascript:void(0)\\\">Rejected Chats</a></li>\\n            <li class=\\\"active\\\">Chat</li>\\n        </ol>\\n    </section>\\n    <section class=\\\"content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n                <div class=\\\"box\\\">\\n                    <div class=\\\"col-xs-12\\\">\\n                        <div class=\\\"row\\\">\\n                            <h2>Messages</h2>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngIf=\\\"!!(showChats() | async).length\\\">\\n                            <div class=\\\"col-md-3 col-sm-3\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"chat-list\\\">\\n                                        <ul>\\n                                            <ng-container\\n                                                    *ngFor=\\\"let contact of (chatState | async).ongoing; let i = index;\\\">\\n                                                <li [ngClass]=\\\"{ active : currentChatIndex == i}\\\"\\n                                                    *ngIf=\\\"contact.status == 3\\\">\\n                                                    <div class=\\\"col-md-2\\\">\\n                                                        <div class=\\\"chat-head row\\\">\\n                                                            <img src=\\\"../../../../assets/img/avatar5.png\\\"\\n                                                                 class=\\\"img-responsive\\\">\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"col-md-10\\\">\\n                                                        <div class=\\\"chat-content\\\">\\n                                                            <h3>{{contact.client}} <span>{{contact.chatTime.date | amFromUtc | amLocal | amTimeAgo}}</span>\\n                                                            </h3>\\n                                                            <p>{{contact.room}}</p>\\n                                                        </div>\\n                                                    </div>\\n                                                </li>\\n                                            </ng-container>\\n                                        </ul>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-9 col-sm-9\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"box box-primary direct-chat direct-chat-primary\\\">\\n                                        <div class=\\\"box-body\\\">\\n                                            <!--<div class=\\\"chat-btn\\\">-->\\n                                            <!--<div *ngIf=\\\"(chatState | async).ongoing[currentChatIndex]?.status == 2\\\">-->\\n                                            <!--<button (click)=\\\"onSomeMsgAction(5)\\\" class=\\\"btn btn-success\\\">Resolve Chat</button>-->\\n                                            <!--<div class=\\\"dropdown target-drop\\\" [appDropdown]=\\\"'open'\\\" [disable-hover]=\\\"true\\\" >-->\\n                                            <!--<button class=\\\"btn btn-default dropdown-toggle\\\"-->\\n                                            <!--type=\\\"button\\\" data-toggle=\\\"dropdown\\\">-->\\n                                            <!--Transfer-->\\n                                            <!--<span class=\\\"caret\\\"></span>-->\\n                                            <!--</button>-->\\n                                            <!--<ul class=\\\"dropdown-menu\\\">-->\\n                                            <!--<li class=\\\"dropdown-submenu\\\" *ngFor=\\\"let department of (chatState | async).agentList; let i = index;\\\">-->\\n                                            <!--<div class=\\\"dropdown\\\" [appDropdown]=\\\"'open'\\\" [disable-hover]=\\\"false\\\">-->\\n                                            <!--<a class=\\\"test\\\" tabindex=\\\"-1\\\">{{ department.department_name }}  <span class=\\\"caret\\\"></span></a>-->\\n                                            <!--<ul class=\\\"dropdown-menu\\\">-->\\n                                            <!--<li><a tabindex=\\\"-1\\\" (click)=\\\"transferChatToDepartment(department.department_id)\\\">Transfer to department </a></li>-->\\n                                            <!--<li class=\\\"dropdown-submenu\\\">-->\\n                                            <!--<a tabindex=\\\"-1\\\" >Transfer to agent </a>-->\\n                                            <!--<ul class=\\\"super-sub\\\">-->\\n                                            <!--<li *ngFor=\\\"let agent of department.agent\\\">-->\\n                                            <!--<a tabindex=\\\"-1\\\" (click)=\\\"transferChatToAgent(agent.agent_id)\\\" [ngClass]=\\\"(agent.agent_id === agentId)? 'btn-disabled' : ''\\\"> {{ agent.first_name }}  </a>-->\\n                                            <!--</li>-->\\n                                            <!--</ul>-->\\n                                            <!--</li>-->\\n                                            <!--</ul>-->\\n                                            <!--</div>-->\\n                                            <!--</li>-->\\n                                            <!--</ul>-->\\n                                            <!--</div>-->\\n                                            <!--</div>-->\\n                                            <!--&lt;!&ndash; Conversations are loaded here &ndash;&gt;-->\\n                                            <!--<div class=\\\"direct-chat-messages\\\">-->\\n                                            <!--&lt;!&ndash; Message. Default to the left &ndash;&gt;-->\\n                                            <!--<div *ngIf=\\\"(chatState | async).ongoing[currentChatIndex]?.status == 1\\\">-->\\n                                            <!--<button (click)=\\\"onSomeMsgAction(2)\\\" class=\\\"btn btn-primary\\\">Accept</button>-->\\n                                            <!--<button (click)=\\\"onSomeMsgAction(3)\\\" class=\\\"btn btn-danger\\\">Reject</button>-->\\n                                            <!--</div>-->\\n                                            <!--</div>-->\\n                                            <!--</div>-->\\n                                            <!--/.direct-chat-messages-->\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <!--<div class=\\\"row\\\" *ngIf=\\\"!(chatState | async).ongoing.length\\\">-->\\n                        <!--<h2>No Ongoing Chats at this Moment!</h2>-->\\n                        <!--</div>-->\\n\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"box box-primary\\\">\\n                                <div class=\\\"box-body\\\" *ngIf=\\\"!(showChats() | async).length\\\">\\n                                    <h4>No Rejected Chats at this Moment!</h4>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <!-- /.box -->\\n            </div>\\n            <!-- /.col -->\\n        </div>\\n        <!-- /.row -->\\n    </section>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/rejected/rejected.component.html\n// module id = ../../../../../src/app/core/layout/inner-pages/chat/rejected/rejected.component.html\n// module chunks = chat.module","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\nimport { ChatService } from '../chat.service';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/take';\nimport * as fromAfterLogin from '../../../store/after-login.reducers';\nimport * as ChatActions from '../../../store/chat/chat.actions';\nimport * as fromChat from '../../../store/chat/chat.reducers';\n\n@Component({\n  selector: 'app-rejected',\n  templateUrl: './rejected.component.html',\n  styleUrls: ['./rejected.component.css']\n})\nexport class RejectedComponent implements OnInit, OnDestroy {\n\n    chatState: Observable<fromChat.ChatState>;\n    currentChatIndex: number = 0;\n    currentChatRoom: string = '';\n    chatRoomSubscription: Subscription;\n    agentId: number;\n    toAgentId : number;\n    departmentId : number;\n    transferData : any;\n\n\n    constructor(private store: Store<fromAfterLogin.AfterLoginFeatureState>,\n                private chatService: ChatService,   private activatedRoute: ActivatedRoute, private router: Router) { }\n\n    ngOnInit() {\n        this.chatService.connect();\n        this.chatState = this.store.select('afterLogin').map(data => data.chat);\n        this.getChatRoom();\n        this.store.dispatch(new ChatActions.GetTransferAgentListAttempt({ chatRoomId : this.currentChatRoom}));\n        this.store.select('auth')\n            .take(1)\n            .map(data => data.userId)\n            .distinctUntilChanged()\n            .subscribe(\n                (id) => {\n                    this.agentId = id;\n                }\n            );\n    }\n\n    changeCurrentChat(i: number) {\n        this.currentChatIndex = i;\n        this.getChatRoom();\n        this.store.dispatch(new ChatActions.GetTransferAgentListAttempt({ chatRoomId : this.currentChatRoom}));\n\n    }\n\n    transferChatToAgent(i: number) {\n        this.toAgentId = i;\n        this.transferData = { agentId: this.agentId, status: 4, chatRoomId: this.currentChatRoom , toAgentId : this.toAgentId};\n        this.onSomeMsgAction(4);\n    }\n\n    transferChatToDepartment(i: number) {\n        this.departmentId = i;\n        this.transferData = { agentId: this.agentId, status: 4, chatRoomId: this.currentChatRoom , departmentId : this.departmentId};\n        this.onSomeMsgAction(4);\n    }\n\n    onSomeMsgAction(status: number) {\n        switch(status) {\n            case 2:\n                this.chatService.takeAction({ agentId: this.agentId, status: status, chatRoomId: this.currentChatRoom });\n                this.router.navigate(['/chat/ongoing']);\n                break;\n            case 3:\n                this.chatService.takeAction({ agentId: this.agentId, status: status, chatRoomId: this.currentChatRoom });\n                break;\n            case 4:\n                this.chatService.takeAction(this.transferData);\n                this.changeCurrentChat(0);\n                break;\n            case 5:\n                this.chatService.takeAction({ agentId: this.agentId, status: status, chatRoomId: this.currentChatRoom });\n                this.changeCurrentChat(0);\n                break;\n            default:\n                console.log(status);\n        }\n    }\n\n    getChatRoom() {\n        this.chatRoomSubscription = this.store.select('afterLogin')\n            .subscribe(\n                data => {\n                    if (data.chat.ongoing[this.currentChatIndex] && !data.chat.ongoing[this.currentChatIndex].length) {\n                        this.currentChatRoom = data.chat.ongoing[this.currentChatIndex].room;\n                    }\n                });\n    }\n\n    sendMsg(form: NgForm) {\n        this.chatService.sendMsg({ ...form.value, chatRoomId: this.currentChatRoom });\n        form.reset();\n    }\n\n    /** Show chats id status is 3 */\n    showChats() {\n        return this.store.select('afterLogin')\n            .map(data => data.chat)\n            .map(chats => chats.ongoing.filter(chat => chat.status == 3 ));\n    }\n\n    getLoggedInAgentDetails() {\n        return this.chatService.getLoggedInAgentDetails();\n    }\n\n    ngOnDestroy() {\n        this.chatRoomSubscription.unsubscribe();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/rejected/rejected.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h2{\\n    background: #fff;\\n    text-align: center;\\n    margin: 0;\\n    padding: 15px;\\n    color: #000;\\n    font-size: 20px;\\n    text-transform: uppercase;\\n    letter-spacing: 1px;\\n    box-shadow: 1px 1px 1px 1px #ebebeb;\\n    -webkit-box-shadow: 1px 1px 1px 1px #ebebeb;\\n    -moz-box-shadow: 1px 1px 1px 1px #ebebeb;\\n}\\n.box{\\n    margin-top: 5px;\\n    border: 0;\\n}\\n.chat-list{\\n    display: inline-block;\\n    width: 100%;\\n}\\n.chat-list ul{\\n    margin: 5px 0 0;\\n    padding: 0;\\n    list-style-type: none;\\n    background: #fff;\\n    max-height: 705px;\\n    overflow-y: auto;\\n    border-radius: 3px;\\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);\\n}\\n.chat-list ul li{\\n    display: inline-block;\\n    width: 100%;\\n    padding: 15px 0;\\n    border-bottom: 1px solid #f4f4f4;\\n    cursor: pointer;\\n    vertical-align: top;\\n}\\n.chat-list ul li:last-child{\\n    border: 0;\\n}\\n.chat-list ul li:hover, .chat-list ul li.active {\\n    background: #3c8dbc;\\n    box-shadow: 1px 1px 1px 1px #666;\\n    border-bottom: 1px solid #3c8dbc;\\n}\\n.chat-head img{\\n    border-radius: 50%;\\n    margin: auto;\\n    width: 40px;\\n    height: 40px;\\n}\\n.chat-content h3{\\n    margin: 0 0 5px;\\n    font-size: 16px;\\n    font-weight: bold;\\n    color: #3c8dbc;\\n}\\n.chat-content h3 span{\\n    float: right;\\n    font-weight: normal;\\n    font-size: 12px;\\n    color: #000;\\n}\\n.chat-list ul li:hover h3,.chat-list ul li.active h3{\\n    color: #fff;\\n}\\n.chat-list ul li:hover h3 span, .chat-list ul li.active h3 span{\\n    color: #fff;\\n}\\n.chat-list ul li:hover p, .chat-list ul li.active p{\\n    color: #fff;\\n}\\n.chat-box{\\n    padding: 20px;\\n}\\n.receiver, .sender{\\n    display: inline-block;\\n    width: 100%;\\n    padding: 20px 0;\\n}\\n.sender .chat-content{\\n    text-align: right;\\n    border-radius: 5px;\\n}\\n.receiver .chat-content{\\n    background: #3c8dbc;\\n    color: #fff;\\n    padding: 15px;\\n    border-radius: 5px;\\n}\\n.sender .chat-content p, .receiver .chat-content p {\\n    margin: 0;\\n}\\n.direct-chat-msg {\\n    margin-bottom: 20px;\\n}\\n.direct-chat-messages {\\n    height: 500px;\\n}\\n\\n.dropdown-submenu {\\n    position: relative;\\n    text-align: center;\\n    border-bottom: 1px solid #eee;\\n    padding: 5px;\\n}\\n.dropdown-submenu:last-child {\\n    border: none;\\n}\\n\\n.chat-btn{\\n    margin: 10px 20px 20px;\\n}\\n\\n.chat-btn .target-drop{\\n    display: inline-block;\\n}\\n.dropdown-submenu a{\\n    color: #666;\\n}\\n.open>.dropdown-menu {\\n    display: block;\\n}\\n\\n.dropdown-submenu .dropdown-menu {\\n    top: 0;\\n    left: 100%;\\n    margin-top: -1px;\\n    text-align: center;\\n}\\n.dropdown-submenu .dropdown-menu li {\\n    border-bottom: 1px solid #eee;\\n}\\n.dropdown-submenu .dropdown-menu li:last-child {\\n    border: none;\\n}\\n.show {\\n    display: block;\\n}\\n\\na {\\n    cursor: pointer;\\n}\\n\\n\\n\\n\\n\\n\\n\\n.super-sub{display: none;}\\n\\nli.dropdown-submenu li:hover .super-sub{display: block}\\nul.super-sub{padding: 0;\\n    margin: 0;\\n    position: absolute;\\n    right: -188px;\\n    width: 194px;\\n    background: #fff;\\n    border: 1px solid rgba(0,0,0,.15);\\n    top: 4px;\\n}\\nul.super-sub li{list-style: none; padding: 4px 0;}\\nul.super-sub li a{display: block;}\\nul.super-sub li:hover{background: #e1e3e9;}\\n\\n\\n.btn-disabled,.btn-disabled[disabled] {\\n    opacity: .4;\\n    cursor: not-allowed;\\n    pointer-events: none;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/resolve/resolve.component.css\n// module id = ../../../../../src/app/core/layout/inner-pages/chat/resolve/resolve.component.css\n// module chunks = chat.module","module.exports = \"<div class=\\\"content-wrapper\\\">\\n    <section class=\\\"content-header\\\">\\n        <h1>Resolve Chats</h1>\\n        <ol class=\\\"breadcrumb\\\">\\n            <li><a routerLink=\\\"/dashboard\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>\\n            <li><a href=\\\"javascript:void(0)\\\">Resolve Chats</a></li>\\n            <li class=\\\"active\\\">Chat</li>\\n        </ol>\\n    </section>\\n    <section class=\\\"content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n                <div class=\\\"box\\\">\\n                    <div class=\\\"col-xs-12\\\">\\n                        <div class=\\\"row\\\">\\n                            <h2>Messages</h2>\\n                        </div>\\n\\n                        <div class=\\\"row\\\" *ngIf=\\\"!!(showChats() | async).length\\\">\\n                            <div class=\\\"col-md-3 col-sm-3\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"chat-list\\\">\\n                                        <ul>\\n                                            <ng-container\\n                                                    *ngFor=\\\"let contact of (chatState | async).ongoing; let i = index;\\\">\\n                                                <li [ngClass]=\\\"{ active : currentChatIndex == i}\\\"\\n                                                    (click)=\\\"changeCurrentChat(i)\\\" *ngIf=\\\"contact.status == 5\\\">\\n                                                    <div class=\\\"col-md-2\\\">\\n                                                        <div class=\\\"chat-head row\\\">\\n                                                            <img src=\\\"../../../../assets/img/avatar5.png\\\"\\n                                                                 class=\\\"img-responsive\\\">\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"col-md-10\\\">\\n                                                        <div class=\\\"chat-content\\\">\\n                                                            <h3>{{contact.client}} <span>{{contact.chatTime.date | amFromUtc | amLocal | amTimeAgo}}</span>\\n                                                            </h3>\\n                                                            <p>{{contact.room}}</p>\\n                                                        </div>\\n                                                    </div>\\n                                                </li>\\n                                            </ng-container>\\n                                        </ul>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-9 col-sm-9\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"box box-primary direct-chat direct-chat-primary\\\">\\n                                        <div class=\\\"box-body\\\">\\n                                            <div class=\\\"chat-btn\\\">\\n                                                <div *ngIf=\\\"(chatState | async).ongoing[currentChatIndex]?.status == 2\\\">\\n                                                    <!--<button (click)=\\\"onSomeMsgAction(5)\\\" class=\\\"btn btn-success\\\">Resolve Chat</button>-->\\n                                                    <!--<div class=\\\"dropdown target-drop\\\" [appDropdown]=\\\"'open'\\\" [disable-hover]=\\\"true\\\" >-->\\n                                                    <!--<button class=\\\"btn btn-default dropdown-toggle\\\"-->\\n                                                    <!--type=\\\"button\\\" data-toggle=\\\"dropdown\\\">-->\\n                                                    <!--Transfer-->\\n                                                    <!--<span class=\\\"caret\\\"></span>-->\\n                                                    <!--</button>-->\\n                                                    <!--<ul class=\\\"dropdown-menu\\\">-->\\n                                                    <!--<li class=\\\"dropdown-submenu\\\" *ngFor=\\\"let department of (chatState | async).agentList; let i = index;\\\">-->\\n                                                    <!--<div class=\\\"dropdown\\\" [appDropdown]=\\\"'open'\\\" [disable-hover]=\\\"false\\\">-->\\n                                                    <!--<a class=\\\"test\\\" tabindex=\\\"-1\\\">{{ department.department_name }}  <span class=\\\"caret\\\"></span></a>-->\\n                                                    <!--<ul class=\\\"dropdown-menu\\\">-->\\n                                                    <!--<li><a tabindex=\\\"-1\\\" (click)=\\\"transferChatToDepartment(department.department_id)\\\">Transfer to department </a></li>-->\\n                                                    <!--<li class=\\\"dropdown-submenu\\\">-->\\n                                                    <!--<a tabindex=\\\"-1\\\" >Transfer to agent </a>-->\\n                                                    <!--<ul class=\\\"super-sub\\\">-->\\n                                                    <!--<li *ngFor=\\\"let agent of department.agent\\\">-->\\n                                                    <!--<a tabindex=\\\"-1\\\" (click)=\\\"transferChatToAgent(agent.agent_id)\\\" [ngClass]=\\\"(agent.agent_id === agentId)? 'btn-disabled' : ''\\\"> {{ agent.first_name }}  </a>-->\\n                                                    <!--</li>-->\\n                                                    <!--</ul>-->\\n                                                    <!--</li>-->\\n                                                    <!--</ul>-->\\n                                                    <!--</div>-->\\n                                                    <!--</li>-->\\n                                                    <!--</ul>-->\\n                                                    <!--</div>-->\\n                                                </div>\\n                                                <!-- Conversations are loaded here -->\\n                                                <div class=\\\"direct-chat-messages\\\"\\n                                                     *ngIf=\\\"(chatState | async).ongoing[currentChatIndex]?.status == 5\\\">\\n                                                    <!-- Message. Default to the left -->\\n                                                    <div class=\\\"direct-chat-msg\\\"\\n                                                         [ngClass]=\\\"{ right: chat.direction == 2 }\\\"\\n                                                         *ngFor=\\\"let chat of (chatState | async).ongoing[currentChatIndex]?.chats\\\">\\n                                                        <div class=\\\"direct-chat-info clearfix\\\">\\n                                                            <span class=\\\"direct-chat-name\\\"\\n                                                                  [ngClass]=\\\"chat.direction == 2 ? 'pull-right' : 'pull-left'\\\">{{chat.user}}</span>\\n                                                            <span class=\\\"direct-chat-timestamp\\\"\\n                                                                  [ngClass]=\\\"chat.direction == 1 ? 'pull-right' : 'pull-left'\\\"> {{chat.created_at.date | amFromUtc | amLocal | amTimeAgo }} </span>\\n                                                        </div>\\n                                                        <img class=\\\"direct-chat-img\\\"\\n                                                             [src]=\\\"chat.direction == 2 ?  '../../../../assets/img/user1-128x128.jpg' : '../../../../assets/img/user3-128x128.jpg'\\\"\\n                                                             alt=\\\"Message User Image\\\"><!-- /.direct-chat-img -->\\n                                                        <div class=\\\"direct-chat-text\\\">\\n                                                            {{chat.message}}\\n                                                        </div>\\n                                                    </div>\\n                                                    <div *ngIf=\\\"(chatState | async).ongoing[currentChatIndex]?.status == 1\\\">\\n                                                        <button (click)=\\\"onSomeMsgAction(2)\\\" class=\\\"btn btn-primary\\\">\\n                                                            Accept\\n                                                        </button>\\n                                                        <button (click)=\\\"onSomeMsgAction(3)\\\" class=\\\"btn btn-danger\\\">\\n                                                            Reject\\n                                                        </button>\\n                                                    </div>\\n\\n\\n                                                </div>\\n\\n\\n                                            </div>\\n                                            <!--/.direct-chat-messages-->\\n\\n                                        </div>\\n                                        <!-- /.box-body -->\\n                                        <div class=\\\"box-footer\\\"\\n                                             *ngIf=\\\"(chatState | async).ongoing[currentChatIndex]?.status != 5\\\">\\n                                            <!--<form #form=\\\"ngForm\\\" (submit)=\\\"sendMsg(form)\\\">-->\\n                                            <!--<div class=\\\"input-group\\\">-->\\n                                            <!--<input type=\\\"text\\\"-->\\n                                            <!--name=\\\"messageBody\\\"-->\\n                                            <!--placeholder=\\\"Type Message ...\\\"-->\\n                                            <!--class=\\\"form-control\\\"-->\\n                                            <!--ngModel-->\\n                                            <!--required-->\\n                                            <!--&gt;-->\\n                                            <!--<span class=\\\"input-group-btn\\\">-->\\n                                            <!--<button type=\\\"button\\\"-->\\n                                            <!--[disabled]=\\\"!form.invalid\\\"-->\\n                                            <!--class=\\\"btn btn-default btn-flat\\\">-->\\n                                            <!--<i class=\\\"fa fa-paperclip\\\" aria-hidden=\\\"true\\\"></i>-->\\n                                            <!--</button>-->\\n                                            <!--<button type=\\\"submit\\\"-->\\n                                            <!--[disabled]=\\\"form.invalid\\\"-->\\n                                            <!--class=\\\"btn btn-primary btn-flat\\\">-->\\n                                            <!--Send-->\\n                                            <!--</button>-->\\n                                            <!--</span>-->\\n                                            <!--</div>-->\\n                                            <!--</form>-->\\n                                        </div>\\n                                        <!-- /.box-footer-->\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <!--<div class=\\\"row\\\" *ngIf=\\\"!(chatState | async).ongoing.length\\\">-->\\n                        <!--<h2>No Ongoing Chats at this Moment!</h2>-->\\n                        <!--</div>-->\\n\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"box box-primary\\\">\\n                                <div class=\\\"box-body\\\" *ngIf=\\\"!(showChats() | async).length\\\">\\n                                    <h4>No Resolve Chats at this Moment!</h4>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <!-- /.box -->\\n            </div>\\n            <!-- /.col -->\\n        </div>\\n        <!-- /.row -->\\n    </section>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/resolve/resolve.component.html\n// module id = ../../../../../src/app/core/layout/inner-pages/chat/resolve/resolve.component.html\n// module chunks = chat.module","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ChatService } from '../chat.service';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/take';\nimport * as fromAfterLogin from '../../../store/after-login.reducers';\nimport * as ChatActions from '../../../store/chat/chat.actions';\nimport * as fromChat from '../../../store/chat/chat.reducers';\n\n@Component({\n    selector: 'app-resolve',\n    templateUrl: './resolve.component.html',\n    styleUrls: ['./resolve.component.css']\n})\n\n    export class ResolveComponent implements OnInit, OnDestroy {\n\n    chatState: Observable<fromChat.ChatState>;\n    currentChatIndex: number = 0;\n    currentChatRoom: string = '';\n    chatRoomSubscription: Subscription;\n    agentId: number;\n    toAgentId : number;\n    departmentId : number;\n    transferData : any;\n\n\n    constructor(private store: Store<fromAfterLogin.AfterLoginFeatureState>,\n                private chatService: ChatService) { }\n\n    ngOnInit() {\n        this.chatService.connect();\n        this.chatState = this.store.select('afterLogin').map(data => data.chat);\n        this.getChatRoom();\n        this.store.dispatch(new ChatActions.GetTransferAgentListAttempt({ chatRoomId : this.currentChatRoom}));\n        this.store.select('auth')\n            .take(1)\n            .map(data => data.userId)\n            .distinctUntilChanged()\n            .subscribe(\n                (id) => {\n                    this.agentId = id;\n                }\n            );\n    }\n\n    changeCurrentChat(i: number) {\n        this.currentChatIndex = i;\n        this.getChatRoom();\n        this.store.dispatch(new ChatActions.GetTransferAgentListAttempt({ chatRoomId : this.currentChatRoom}));\n\n    }\n\n    transferChatToAgent(i: number) {\n        this.toAgentId = i;\n        this.transferData = { agentId: this.agentId, status: 4, chatRoomId: this.currentChatRoom , toAgentId : this.toAgentId};\n        this.onSomeMsgAction(4);\n    }\n\n    transferChatToDepartment(i: number) {\n        this.departmentId = i;\n        this.transferData = { agentId: this.agentId, status: 4, chatRoomId: this.currentChatRoom , departmentId : this.departmentId};\n        this.onSomeMsgAction(4);\n    }\n\n    onSomeMsgAction(status: number) {\n        switch(status) {\n            case 2:\n                this.chatService.takeAction({ agentId: this.agentId, status: status, chatRoomId: this.currentChatRoom });\n                break;\n            case 3:\n                this.chatService.takeAction({ agentId: this.agentId, status: status, chatRoomId: this.currentChatRoom });\n                break;\n            case 4:\n                this.chatService.takeAction(this.transferData);\n                this.changeCurrentChat(0);\n                break;\n            case 5:\n                this.chatService.takeAction({ agentId: this.agentId, status: status, chatRoomId: this.currentChatRoom });\n                this.changeCurrentChat(0);\n                break;\n            default:\n                console.log(status);\n        }\n    }\n\n    getChatRoom() {\n        this.chatRoomSubscription = this.store.select('afterLogin')\n            .subscribe(\n                data => {\n                    if (data.chat.ongoing[this.currentChatIndex] && !data.chat.ongoing[this.currentChatIndex].length) {\n                        this.currentChatRoom = data.chat.ongoing[this.currentChatIndex].room;\n                    }\n                });\n    }\n\n    sendMsg(form: NgForm) {\n        this.chatService.sendMsg({ ...form.value, chatRoomId: this.currentChatRoom });\n        form.reset();\n    }\n\n    /** Show chats id status is 5 */\n    showChats() {\n        return this.store.select('afterLogin')\n            .map(data => data.chat)\n            .map(chats => chats.ongoing.filter(chat => chat.status == 5 ));\n    }\n\n    getLoggedInAgentDetails() {\n        return this.chatService.getLoggedInAgentDetails();\n    }\n\n    ngOnDestroy() {\n        this.chatRoomSubscription.unsubscribe();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chat/resolve/resolve.component.ts"],"sourceRoot":"webpack:///"}
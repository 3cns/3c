{"version":3,"sources":["/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/create-department/create-department.component.css","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/create-department/create-department.component.html","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/create-department/create-department.component.ts","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/department-routing.module.ts","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/department.module.ts","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/list-department/list-department.component.css","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/list-department/list-department.component.html","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/list-department/list-department.component.ts"],"names":[],"mappings":"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","file":"department.module.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/create-department/create-department.component.css\n// module id = ../../../../../src/app/core/layout/inner-pages/department/create-department/create-department.component.css\n// module chunks = department.module","module.exports = \"<div class=\\\"content-wrapper\\\">\\n    <section class=\\\"content-header\\\">\\n        <h1>Department Section</h1>\\n        <ol class=\\\"breadcrumb\\\">\\n            <li><a routerLink=\\\"/dashboard\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>\\n            <li><a routerLink=\\\"/department/list\\\">Department</a></li>\\n            <li class=\\\"active\\\"><a href=\\\"javascript:void(0)\\\">{{ editMode ? 'Edit' : 'Create' }}</a></li>\\n        </ol>\\n    </section>\\n    <section class=\\\"content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n                <div class=\\\"box box-primary\\\">\\n                    <!-- /.box-header -->\\n                    <div class=\\\"box-body\\\" *ngIf=\\\"(authState | async).twilioIsActive\\\">\\n                        <form #form=\\\"ngForm\\\" (submit)=\\\"onCreateDep(form)\\\">\\n                            <!-- text input -->\\n                            <div class=\\\"box-header with-border\\\">\\n                                <h3 class=\\\"box-title\\\">{{ editMode ? 'Edit' : 'Create' }} Department</h3>\\n                            </div>\\n                            <div class=\\\"col-md-12\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-6\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"control-label\\\" for=\\\"admin\\\">\\n                                                Admin for Department\\n                                            </label>\\n                                            <select class=\\\"form-control\\\"\\n                                                    id=\\\"admin\\\"\\n                                                    name=\\\"userId\\\"\\n                                                    [disabled]=\\\"editMode || (authState | async).isAdmin\\\"\\n                                                    #selected\\n                                                    [(ngModel)]=\\\"dep.userId\\\">\\n                                                <option selected value=\\\"0\\\">Choose...</option>\\n                                                <option [value]=\\\"item.id\\\"\\n                                                        *ngFor=\\\"let item of (afterLoginState | async).admin.list; let i = index\\\"\\n                                                >\\n                                                    {{item.first_name}} {{item.last_name}}\\n                                                </option>\\n                                            </select>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\" *ngIf=\\\"selected.value > 0\\\">\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"(dName.invalid && dName.touched) ? 'has-error': ''\\\">\\n                                    <label class=\\\"control-label\\\" for=\\\"name\\\">\\n                                        <i *ngIf=\\\"dName.invalid && dName.touched\\\" class=\\\"fa fa-times-circle-o\\\"></i>\\n                                        Department Name\\n                                    </label>\\n                                    <input type=\\\"text\\\"\\n                                           class=\\\"form-control\\\"\\n                                           id=\\\"name\\\"\\n                                           name=\\\"departmentName\\\"\\n                                           [ngModel]=\\\"dep.departmentName\\\"\\n                                           #dName=\\\"ngModel\\\"\\n                                           required\\n                                           placeholder=\\\"Enter ...\\\"\\n                                    >\\n                                    <span *ngIf=\\\"dName.invalid && dName.touched\\\" class=\\\"help-block\\\">Your Department Name is Required!</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\" *ngIf=\\\"selected.value > 0\\\">\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': dDes.invalid && dDes.touched }\\\">\\n                                    <label class=\\\"control-label\\\" for=\\\"detail\\\">\\n                                        <i *ngIf=\\\"dDes.invalid && dDes.touched\\\" class=\\\"fa fa-times-circle-o\\\"></i>\\n                                        Department Description\\n                                    </label>\\n                                    <input type=\\\"text\\\"\\n                                           class=\\\"form-control\\\"\\n                                           id=\\\"detail\\\"\\n                                           name=\\\"departmentDetails\\\"\\n                                           ngModel\\n                                           [ngModel]=\\\"dep.departmentDetails\\\"\\n                                           #dDes=\\\"ngModel\\\"\\n                                           required\\n                                           placeholder=\\\"Enter ...\\\"\\n                                    >\\n                                    <span *ngIf=\\\"dDes.invalid && dDes.touched\\\" class=\\\"help-block\\\">Your Department Description is Required!</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12\\\">\\n                                <div class=\\\"box-footer\\\">\\n                                    <button type=\\\"submit\\\"\\n                                            [disabled]=\\\"form.invalid || selected.value <= 0\\\"\\n                                            class=\\\"btn btn-primary pull-right\\\"\\n                                    >\\n                                        <i *ngIf=\\\"loader\\\" class=\\\"fa fa-spinner fa-spin\\\"></i> Submit\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </form>\\n                    </div>\\n                    <div class=\\\"box-body\\\" *ngIf=\\\"!(authState | async).twilioIsActive\\\">\\n                        <h4>Twilio Credentials Not Added by SuperAdmin :-(</h4>\\n                    </div>\\n                    <!-- /.box-body -->\\n                </div>\\n            </div>\\n            <!-- /.col -->\\n        </div>\\n        <!-- /.row -->\\n    </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/create-department/create-department.component.html\n// module id = ../../../../../src/app/core/layout/inner-pages/department/create-department/create-department.component.html\n// module chunks = department.module","import { ActivatedRoute, Data, Router } from '@angular/router';\nimport { AfterViewChecked, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { Store } from '@ngrx/store';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\nimport * as AdminActions from '../../../store/admin/admin.actions';\nimport * as fromAuth from '../../../../store/auth/auth.reducers';\nimport * as fromAfterLogin from '../../../store/after-login.reducers';\nimport * as DepartmentActions from '../../../store/department/department.actions';\nimport { Subscription } from 'rxjs/Subscription'\n\n@Component({\n  selector: 'app-create-department',\n  templateUrl: './create-department.component.html',\n  styleUrls: ['./create-department.component.css']\n})\nexport class CreateDepartmentComponent implements OnInit, AfterViewChecked, OnDestroy {\n\n  /** Variable declaration */\n  @ViewChild('form') form:NgForm;\n  authState: Observable<fromAuth.State>;\n  afterLoginState: Observable<fromAfterLogin.FeatureState>;\n  authSubscription: Subscription;\n  afterLoginSubscription: Subscription;\n  editMode: boolean = false;\n  depId: number;\n  updateDep: any;\n  loggedInAdminId: number;\n  dep = {\n    userId: 0,\n    departmentName: '',\n    departmentDetails: ''\n  };\n  loader: boolean = false;\n  /** Service injection */\n  constructor(private store: Store<fromAfterLogin.AfterLoginFeatureState>,\n              private activatedRoute: ActivatedRoute,\n              private cdr: ChangeDetectorRef, private router: Router) { }\n\n  /** Function to be executed when component initializes */\n  ngOnInit() {\n    this.store.dispatch(new AdminActions.GetAdminListAttempt());\n    this.authState = this.store.select('auth');\n    this.afterLoginState = this.store.select('afterLogin');\n\n    this.authSubscription = this.store.select('auth')\n      .subscribe(\n        (data) => {\n          if(data.isAdmin) {\n            this.dep.userId = data.userId;\n            this.loggedInAdminId = data.userId;\n          }\n        }\n      );\n\n    this.afterLoginSubscription = this.store.select('afterLogin')\n      .map(data => data.department.resetDepartmentForm)\n      .subscribe(\n        (data) => {\n          if(data) {\n            this.loader = false;\n            this.form.reset();\n            this.store.dispatch(new DepartmentActions.ResetDepartmentForm());\n            if(!!this.loggedInAdminId) {\n              this.form.form.patchValue({ userId: this.loggedInAdminId });\n            }\n          }\n        }\n      );\n\n    this.activatedRoute.data\n      .subscribe(\n      (data: Data) => {\n        this.editMode = data['editMode'];\n\n        /** Perform operation is present mode is edit mode */\n        if(this.editMode) {\n          /** Checking route params to get id of department to edit */\n          this.depId = this.activatedRoute.snapshot.params['id'];\n          this.store.dispatch(new DepartmentActions.GetToEditDepartmentAttempt({departmentId: this.depId}));\n          this.updateDep = this.store.select('afterLogin')\n            .map(data => data.department.toEdit)\n            .distinctUntilChanged()\n            .subscribe(\n              (dep) => {\n                if(dep) {\n                  //setTimeout(() => {\n                    this.dep.userId = dep.user_id;\n                    this.dep.departmentName = dep.department_name;\n                    this.dep.departmentDetails = dep.department_details;\n                  //}, 0)\n                }\n              }\n            );\n        }\n      }\n    );\n\n  }\n\n  /** Your code to update the model */\n  ngAfterViewChecked(){\n    this.cdr.detectChanges();\n  }\n\n  /** Un-subscribe from all subscription when component destroys */\n  ngOnDestroy(){\n    this.authSubscription.unsubscribe();\n    this.afterLoginSubscription.unsubscribe();\n  }\n\n  /** Function call to create a new department */\n  onCreateDep(form: NgForm) {\n    this.loader = true;\n    if(this.editMode) {\n      const data = { ...form.value, departmentId: this.depId };\n      this.store.dispatch(new DepartmentActions.EditDepartmentAttempt({...data}));\n        /** Loader Show/Hide */\n        this.store.select('alert')\n            .map(data => data)\n            .subscribe(\n                (data) => {\n                    if(data.show && data.type === 'danger') {\n                        this.loader = false;\n                    } else if(data.show && data.type === 'success') {\n                        this.router.navigate(['/department/list']);\n                    }\n                }, (error) => { console.error(error); this.loader = false; } , () => {this.loader = false; });\n    } else {\n      this.store.dispatch(new DepartmentActions.AddDepartmentAttempt(form.value));\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/create-department/create-department.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CreateDepartmentComponent } from './create-department/create-department.component'\nimport { ListDepartmentComponent } from './list-department/list-department.component'\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'list' },\n  { path: 'create', component: CreateDepartmentComponent, data: { editMode: false } },\n  { path: 'list', component: ListDepartmentComponent },\n  { path: 'edit/:id', component: CreateDepartmentComponent, data: { editMode: true } },\n  { path: '**', redirectTo: 'list' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DepartmentRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/department-routing.module.ts","import {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgModule} from '@angular/core';\n\nimport {CreateDepartmentComponent} from './create-department/create-department.component';\nimport {ListDepartmentComponent} from './list-department/list-department.component';\nimport {DepartmentRoutingModule} from './department-routing.module';\nimport {Ng2SearchPipeModule} from 'ng2-search-filter';\nimport {OrderModule} from 'ngx-order-pipe';\nimport {NgxPaginationModule} from 'ngx-pagination';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DepartmentRoutingModule,\n        FormsModule,\n        Ng2SearchPipeModule,\n        OrderModule,\n        NgxPaginationModule\n    ],\n    declarations: [\n        CreateDepartmentComponent,\n        ListDepartmentComponent\n    ]\n})\nexport class DepartmentModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/department.module.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/list-department/list-department.component.css\n// module id = ../../../../../src/app/core/layout/inner-pages/department/list-department/list-department.component.css\n// module chunks = department.module","module.exports = \"<div class=\\\"content-wrapper\\\">\\n    <section class=\\\"content-header\\\">\\n        <h1>Department Section</h1>\\n        <ol class=\\\"breadcrumb\\\">\\n            <li><a routerLink=\\\"/dashboard\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>\\n            <li><a href=\\\"javascript:void(0)\\\">Department</a></li>\\n            <li class=\\\"active\\\"><a href=\\\"javascript:void(0)\\\">List</a></li>\\n        </ol>\\n    </section>\\n    <section class=\\\"content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n                <div class=\\\"box box-primary\\\">\\n                    <div class=\\\"box-header with-border\\\">\\n                        <h3 class=\\\"box-title\\\">List of all Departments</h3>\\n                    </div>\\n                    <!-- /.box-header -->\\n                    <div class=\\\"box-body\\\">\\n                        <div id=\\\"example2_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\"> Search : <input [(ngModel)]=\\\"term\\\" placeholder=\\\"keyword\\\"> </div>\\n                                <div class=\\\"col-sm-6\\\"></div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <table id=\\\"departmentListTable\\\" class=\\\"table table-bordered table-hover dataTable\\\" role=\\\"grid\\\" aria-describedby=\\\"example2_info\\\">\\n                                        <thead>\\n                                        <tr role=\\\"row\\\">\\n                                            <th rowspan=\\\"1\\\" colspan=\\\"1\\\" >#</th>\\n                                            <th rowspan=\\\"1\\\" colspan=\\\"1\\\" class=\\\"mdl-data-table__cell--non-numeric\\\">Department Name </th>\\n                                            <th rowspan=\\\"1\\\" colspan=\\\"1\\\" >Department Description</th>\\n                                            <th rowspan=\\\"1\\\" colspan=\\\"1\\\" class=\\\"mdl-data-table__cell--non-numeric\\\">Company </th>\\n                                            <th rowspan=\\\"1\\\" colspan=\\\"1\\\" class=\\\"mdl-data-table__cell--non-numeric\\\">Created Date</th>\\n                                            <th rowspan=\\\"1\\\" colspan=\\\"1\\\" >Actions</th>\\n                                        </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                        <tr role=\\\"row\\\" class=\\\"odd\\\" *ngFor=\\\"let item of (afterLoginState | async).department.list | filter : term | paginate: { itemsPerPage: 10, currentPage: page }; let i = index\\\">\\n                                            <td>{{i+1}}</td>\\n                                            <td>{{item.department_name}}</td>\\n                                            <td>{{item.department_details}}</td>\\n                                            <td>{{item.user_details?.company}}</td>\\n                                            <td>{{item.created_at | date}}</td>\\n                                            <td>\\n                                                <!--<button type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\">-->\\n                                                    <!--<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>-->\\n                                                     <!--View-->\\n                                                <!--</button>-->\\n                                                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"onEdit(item.id)\\\">\\n                                                    <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                                                     Edit\\n                                                </button>\\n                                                <!--<button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\">-->\\n                                                    <!--<i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>-->\\n                                                     <!--Delete-->\\n                                                <!--</button>-->\\n                                            </td>\\n                                        </tr>\\n                                        </tbody>\\n                                    </table>\\n                                    <div class=\\\"row\\\">\\n                                        <pagination-controls class=\\\"older_post_text\\\"\\n                                                             (pageChange)=\\\"page=$event\\\"\\n                                                             maxSize=\\\"9\\\"\\n                                                             directionLinks=\\\"true\\\"\\n                                                             autoHide=\\\"true\\\"\\n                                                             previousLabel=\\\"\\\"\\n                                                             nextLabel=\\\"\\\"\\n                                                             screenReaderPaginationLabel=\\\"\\\"\\n                                                             screenReaderPageLabel=\\\"page\\\"\\n                                                             screenReaderCurrentLabel=\\\"You're on page\\\">\\n                                        </pagination-controls>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <!-- Pagination -->\\n                        </div>\\n                    </div>\\n                    <!-- /.box-body -->\\n                </div>\\n                <!-- /.box -->\\n            </div>\\n            <!-- /.col -->\\n        </div>\\n        <!-- /.row -->\\n    </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/list-department/list-department.component.html\n// module id = ../../../../../src/app/core/layout/inner-pages/department/list-department/list-department.component.html\n// module chunks = department.module","import { Component, OnDestroy, OnInit } from '@angular/core'\nimport { Store } from '@ngrx/store'\nimport * as fromAfterLogin from '../../../store/after-login.reducers'\nimport { Observable } from 'rxjs/Observable'\nimport * as DepartmentActions from '../../../store/department/department.actions'\nimport { Router } from '@angular/router'\nimport { Subscription } from 'rxjs/Subscription'\nimport { OrderPipe } from 'ngx-order-pipe';\n\n@Component({\n  selector: 'app-list-department',\n  templateUrl: './list-department.component.html',\n  styleUrls: ['./list-department.component.css']\n})\nexport class ListDepartmentComponent implements OnInit, OnDestroy {\n\n  /** Variable declaration */\n  afterLoginState: Observable<fromAfterLogin.FeatureState>\n  authSubscription: Subscription\n    order: string = 'info.name';\n    reverse: boolean = false;\n    sortedCollection: any[];\n    page: number;\n    term: any;\n  constructor(private store: Store<fromAfterLogin.AfterLoginFeatureState>,\n              private router: Router, private orderPipe: OrderPipe) {\n      this.sortedCollection = orderPipe.transform(this.afterLoginState, 'info.name');\n  }\n\n  /** Function to be executed when component initializes */\n  ngOnInit() {\n      this.page = 1;\n      this.authSubscription = this.store.select('auth')\n      .subscribe(\n        (data) => {\n          if(data.isAdmin) {\n            this.store.dispatch(new DepartmentActions.GetDepartmentListAttempt({userId: data.userId}));\n          } else {\n            this.store.dispatch(new DepartmentActions.GetDepartmentListAttempt({}));\n          }\n        }\n      );\n\n    this.afterLoginState = this.store.select('afterLogin');\n  }\n\n  /** Function call to start editing a department */\n  onEdit(depId: number) {\n    this.router.navigate([ 'department/edit/', depId ])\n  }\n\n  ngOnDestroy (): void {\n    this.authSubscription.unsubscribe();\n  }\n\n    /**\n     * Function for ordering the table\n     * @param {string} value\n     */\n    setOrder(value: string) {\n        if (this.order === value) {\n            this.reverse = !this.reverse;\n        }\n        this.order = value;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/department/list-department/list-department.component.ts"],"sourceRoot":"webpack:///"}
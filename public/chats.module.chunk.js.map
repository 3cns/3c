{"version":3,"sources":["/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/chats-routing.module.ts","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/chats.module.ts","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/contact-list/contact-list.component.css","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/contact-list/contact-list.component.html","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/contact-list/contact-list.component.ts","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/list-agent/list-agent.component.css","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/list-agent/list-agent.component.html","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/list-agent/list-agent.component.ts","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/list-chat/list-chat.component.css","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/list-chat/list-chat.component.html","/var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/list-chat/list-chat.component.ts"],"names":[],"mappings":"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","file":"chats.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { ListChatComponent } from './list-chat/list-chat.component'\nimport { ListAgentComponent } from './list-agent/list-agent.component'\nimport { ContactListComponent } from './contact-list/contact-list.component'\n\nconst routes: Routes = [\n  { path: 'list-agent', component: ListAgentComponent,data: { chatMode: true } },\n  { path: 'list-chat/:id', component: ListChatComponent },\n  { path: 'list-agents-contacts', component: ListAgentComponent,data: { chatMode: false } },\n  { path: 'contact-list/:id', component: ContactListComponent },\n  { path: '**', redirectTo: 'list-agent' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChatsRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/chats-routing.module.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {ChatsRoutingModule} from './chats-routing.module';\nimport {ListChatComponent} from './list-chat/list-chat.component';\nimport {ListAgentComponent} from './list-agent/list-agent.component';\nimport {ContactListComponent} from './contact-list/contact-list.component';\nimport {SharedModule} from '../../../shared/shared.module';\nimport {MomentModule} from 'angular2-moment';\nimport {Ng2SearchPipeModule} from 'ng2-search-filter';\nimport {OrderModule} from 'ngx-order-pipe';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport {Pipe,PipeTransform} from \"@angular/core\";\n@NgModule({\n    imports: [\n        CommonModule,\n        ChatsRoutingModule,\n        FormsModule,\n        SharedModule,\n        MomentModule,\n        Ng2SearchPipeModule,\n        OrderModule,\n        NgxPaginationModule\n    ],\n    declarations: [\n        ListChatComponent,\n        ListAgentComponent,\n        ContactListComponent\n    ]\n})\nexport class ChatsModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/chats.module.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/contact-list/contact-list.component.css\n// module id = ../../../../../src/app/core/layout/inner-pages/chats/contact-list/contact-list.component.css\n// module chunks = chats.module","module.exports = \"<div class=\\\"content-wrapper\\\">\\n  <section class=\\\"content-header\\\">\\n    <h1>Contact List</h1>\\n    <ol class=\\\"breadcrumb\\\">\\n      <li><a routerLink=\\\"/dashboard\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>\\n      <li><a routerLink=\\\"/chats/list-agents-contacts\\\">Contact</a></li>\\n      <li class=\\\"active\\\"><a href=\\\"javascript:void(0)\\\">View</a></li>\\n    </ol>\\n  </section>\\n  <section class=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12\\\">\\n        <div class=\\\"box\\\">\\n          <div class=\\\"box-header\\\">\\n            <h3 class=\\\"box-title\\\">Contact List</h3>\\n          </div>\\n          <!-- /.box-header -->\\n          <div class=\\\"box-body\\\">\\n            <div id=\\\"example2_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-6\\\"> Search : <input [(ngModel)]=\\\"term\\\" placeholder=\\\"keyword\\\"> </div><div class=\\\"col-sm-6\\\"></div></div><div class=\\\"row\\\"><div class=\\\"col-sm-12\\\">\\n              <table id=\\\"contactListTable\\\" class=\\\"table table-bordered table-hover dataTable\\\" role=\\\"grid\\\" aria-describedby=\\\"example2_info\\\">\\n              <thead>\\n              <tr role=\\\"row\\\">\\n                <th tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\">#</th>\\n                <th tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" class=\\\"mdl-data-table__cell--non-numeric\\\">Client Name </th>\\n                <th tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\">Email</th>\\n                <th tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\">Phone</th>\\n              </tr>\\n              </thead>\\n              <tbody>\\n                <tr role=\\\"row\\\" class=\\\"odd\\\" *ngFor=\\\"let item of (chatState | async).contactList | filter : term | paginate: { itemsPerPage: 10, currentPage: page }; let i = index\\\">\\n                <td>{{i}}</td>\\n                <td>{{item.client_info.client_name.name}}</td>\\n                <td>{{item.client_info.client_name.email}}</td>\\n                <td>{{item.client_info.client_name.phone}}</td>\\n\\n              </tr>\\n              </tbody>\\n            </table>\\n              <div class=\\\"row\\\">\\n                <pagination-controls class=\\\"older_post_text\\\"\\n                                     (pageChange)=\\\"page=$event\\\"\\n                                     maxSize=\\\"9\\\"\\n                                     directionLinks=\\\"true\\\"\\n                                     autoHide=\\\"true\\\"\\n                                     previousLabel=\\\"\\\"\\n                                     nextLabel=\\\"\\\"\\n                                     screenReaderPaginationLabel=\\\"\\\"\\n                                     screenReaderPageLabel=\\\"page\\\"\\n                                     screenReaderCurrentLabel=\\\"You're on page\\\">\\n                </pagination-controls>\\n              </div>\\n            </div>\\n            </div>\\n            </div>\\n          </div>\\n          <!-- /.box-body -->\\n        </div>\\n        <!-- /.box -->\\n        <!--<div class=\\\"msg-popup\\\">-->\\n          <!--<p>This is a success msg!</p>-->\\n        <!--</div>-->\\n      </div>\\n      <!-- /.col -->\\n    </div>\\n    <!-- /.row -->\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/contact-list/contact-list.component.html\n// module id = ../../../../../src/app/core/layout/inner-pages/chats/contact-list/contact-list.component.html\n// module chunks = chats.module","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ActivatedRoute, Data ,Router} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs/Subscription';\nimport * as fromAfterLogin from '../../../store/after-login.reducers';\nimport * as ChatActions from '../../../store/chat/chat.actions';\nimport * as fromChat from '../../../store/chat/chat.reducers';\nimport { OrderPipe } from 'ngx-order-pipe';\n\n@Component({\n  selector: 'app-chats-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.css']\n})\nexport class ContactListComponent implements OnInit {\n\n  /** Variable declaration */\n  chatState: Observable<fromChat.ChatState>;\n  agentId : number;\n    order: string = 'info.name';\n    reverse: boolean = false;\n    sortedCollection: any[];\n    page: number;\n    term:any;\n  /** Service injection */\n  constructor(private store: Store<fromAfterLogin.AfterLoginFeatureState>,\n              private activatedRoute: ActivatedRoute,\n              private router: Router, private orderPipe: OrderPipe) {\n      this.sortedCollection = orderPipe.transform(this.chatState, 'info.name');\n  }\n\n  /** Function to be executed when component initializes */\n  ngOnInit() {\n    this.page = 1;\n    this.chatState = this.store.select('afterLogin')\n        .map(data => data.chat);\n\n    this.activatedRoute.params\n        .subscribe(\n            (id: any) => {\n              this.agentId = this.activatedRoute.snapshot.params['id'];\n              this.store.dispatch(new ChatActions.GetContactListAttempt({ agentId : id}));\n            }\n        );\n\n  }\n\n  /** Function to Edit Agent */\n  onViewChat(id: number) {\n    this.router.navigate([ 'chats/list-chat/', id ]);\n  }\n\n    /**\n     * Function for ordering the table\n     * @param {string} value\n     */\n    setOrder(value: string) {\n        if (this.order === value) {\n            this.reverse = !this.reverse;\n        }\n        this.order = value;\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/contact-list/contact-list.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/list-agent/list-agent.component.css\n// module id = ../../../../../src/app/core/layout/inner-pages/chats/list-agent/list-agent.component.css\n// module chunks = chats.module","module.exports = \"<div class=\\\"content-wrapper\\\">\\n  <section class=\\\"content-header\\\">\\n    <h1>Agent List</h1>\\n    <ol class=\\\"breadcrumb\\\">\\n      <li><a routerLink=\\\"/dashboard\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>\\n      <li *ngIf=\\\"chatMode\\\"><a href=\\\"javascript:void(0)\\\">Chats</a></li>\\n      <li *ngIf=\\\"!chatMode\\\"><a href=\\\"javascript:void(0)\\\">Contact</a></li>\\n      <li class=\\\"active\\\"><a href=\\\"javascript:void(0)\\\">List</a></li>\\n    </ol>\\n  </section>\\n  <section class=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12\\\">\\n        <div class=\\\"box\\\">\\n          <div class=\\\"box-header\\\">\\n            <h3 class=\\\"box-title\\\">Agent List</h3>\\n          </div>\\n          <!-- /.box-header -->\\n          <div class=\\\"box-body\\\">\\n            <div id=\\\"example2_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6\\\"> Search : <input [(ngModel)]=\\\"term\\\" placeholder=\\\"keyword\\\"> </div>\\n                <div class=\\\"col-sm-6\\\"></div>\\n              </div>\\n              <div class=\\\"row\\\"><div class=\\\"col-sm-12\\\">\\n              <table id=\\\"chatList\\\" class=\\\"table table-bordered table-hover dataTable\\\" role=\\\"grid\\\" aria-describedby=\\\"example2_info\\\">\\n              <thead>\\n              <tr role=\\\"row\\\">\\n                <th tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\">#</th>\\n                <th tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" class=\\\"mdl-data-table__cell--non-numeric\\\">First Name </th>\\n                <th tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" class=\\\"mdl-data-table__cell--non-numeric\\\" >Last Name </th>\\n                <th tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Engine version: activate to sort column ascending\\\">Email</th>\\n                <th tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"CSS grade: activate to sort column ascending\\\">Phone</th>\\n                <th tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" class=\\\"mdl-data-table__cell--non-numeric\\\">Department </th>\\n                <th  tabindex=\\\"0\\\" aria-controls=\\\"example2\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"CSS grade: activate to sort column ascending\\\">Action</th>\\n              </tr>\\n              </thead>\\n              <tbody>\\n                <tr role=\\\"row\\\" class=\\\"odd\\\" *ngFor=\\\"let item of (chatState | async).agentList | filter : term | paginate: { itemsPerPage: 10, currentPage: page }; let i = index\\\">\\n                <td>{{i+1}}</td>\\n                <td>{{item.first_name}}</td>\\n                <td>{{item.last_name}}</td>\\n                <td>{{item.email}}</td>\\n                <td>{{item.phone}}</td>\\n                <td>{{item.department_agent_mapping.department_details.department_name}}</td>\\n                <td>\\n                  <!-- Single button -->\\n                  <div class=\\\"btn-group\\\" >\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" *ngIf=\\\"chatMode\\\" (click)=\\\"onViewChat(item.id)\\\">\\n                      View Chats\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" *ngIf=\\\"!chatMode\\\" (click)=\\\"onViewContact(item.id)\\\">\\n                      View Contact List\\n                    </button>\\n                  </div>\\n                </td>\\n              </tr>\\n              </tbody>\\n            </table>\\n                <div class=\\\"row\\\">\\n                  <pagination-controls class=\\\"older_post_text\\\"\\n                                       (pageChange)=\\\"page=$event\\\"\\n                                       maxSize=\\\"9\\\"\\n                                       directionLinks=\\\"true\\\"\\n                                       autoHide=\\\"true\\\"\\n                                       previousLabel=\\\"\\\"\\n                                       nextLabel=\\\"\\\"\\n                                       screenReaderPaginationLabel=\\\"\\\"\\n                                       screenReaderPageLabel=\\\"page\\\"\\n                                       screenReaderCurrentLabel=\\\"You're on page\\\">\\n                  </pagination-controls>\\n                </div>\\n            </div>\\n            </div>\\n\\n            </div>\\n          </div>\\n          <!-- /.box-body -->\\n        </div>\\n        <!-- /.box -->\\n        <!--<div class=\\\"msg-popup\\\">-->\\n          <!--<p>This is a success msg!</p>-->\\n        <!--</div>-->\\n      </div>\\n      <!-- /.col -->\\n    </div>\\n    <!-- /.row -->\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/list-agent/list-agent.component.html\n// module id = ../../../../../src/app/core/layout/inner-pages/chats/list-agent/list-agent.component.html\n// module chunks = chats.module","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ActivatedRoute, Data ,Router} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs/Subscription';\nimport * as fromAfterLogin from '../../../store/after-login.reducers';\nimport * as ChatActions from '../../../store/chat/chat.actions';\nimport * as fromChat from '../../../store/chat/chat.reducers';\nimport { OrderPipe } from 'ngx-order-pipe';\n\n@Component({\n  selector: 'app-chats-list-agent',\n  templateUrl: './list-agent.component.html',\n  styleUrls: ['./list-agent.component.css']\n})\nexport class ListAgentComponent implements OnInit {\n\n  /** Variable declaration */\n  chatState: Observable<fromChat.ChatState>;\n  chatMode: boolean = false;\n    order: string = 'info.name';\n    reverse: boolean = false;\n    sortedCollection: any[];\n    page: number;\n    term: any;\n  /** Service injection */\n  constructor(private store: Store<fromAfterLogin.AfterLoginFeatureState>,\n              private activatedRoute: ActivatedRoute,\n              private router: Router, private orderPipe: OrderPipe) {\n      this.sortedCollection = orderPipe.transform(this.chatState, 'info.name');\n  }\n\n  /** Function to be executed when component initializes */\n  ngOnInit() {\n    this.page = 1;\n    this.chatState = this.store.select('afterLogin')\n        .map(data => data.chat);\n\n    this.activatedRoute.data\n        .subscribe(\n            (data: Data) => {\n              this.chatMode = data['chatMode'];\n              this.store.dispatch(new ChatActions.GetAgentListAttempt());\n            }\n        );\n\n\n  }\n\n  /** Function to View Chats of Agent */\n  onViewChat(id: number) {\n    this.router.navigate([ 'chats/list-chat/', id ]);\n  }\n\n  /** Function to View Contact List of Agent */\n  onViewContact(id: number) {\n    this.router.navigate([ 'chats/contact-list/', id ]);\n  }\n\n    /**\n     * Function for ordering the table\n     * @param {string} value\n     */\n    setOrder(value: string) {\n        if (this.order === value) {\n            this.reverse = !this.reverse;\n        }\n        this.order = value;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/list-agent/list-agent.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h2{\\n    background: #fff;\\n    text-align: center;\\n    margin: 0;\\n    padding: 15px;\\n    color: #000;\\n    font-size: 20px;\\n    text-transform: uppercase;\\n    letter-spacing: 1px;\\n    box-shadow: 1px 1px 1px 1px #ebebeb;\\n    -webkit-box-shadow: 1px 1px 1px 1px #ebebeb;\\n    -moz-box-shadow: 1px 1px 1px 1px #ebebeb;\\n}\\n.box{\\n    margin-top: 5px;\\n    border: 0;\\n}\\n.chat-list{\\n    display: inline-block;\\n    width: 100%;\\n}\\n.chat-list ul{\\n    margin: 5px 0 0;\\n    padding: 0;\\n    list-style-type: none;\\n    background: #fff;\\n    max-height: 705px;\\n    overflow-y: auto;\\n    border-radius: 3px;\\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);\\n}\\n.chat-list ul li{\\n    display: inline-block;\\n    width: 100%;\\n    padding: 15px 0;\\n    border-bottom: 1px solid #f4f4f4;\\n    cursor: pointer;\\n    vertical-align: top;\\n}\\n.chat-list ul li:last-child{\\n    border: 0;\\n}\\n.chat-list ul li:hover{\\n    background: #3c8dbc;\\n    box-shadow: 1px 1px 1px 1px #666;\\n    border-bottom: 1px solid #3c8dbc;\\n}\\n.chat-head img{\\n    border-radius: 50%;\\n    margin: auto;\\n    width: 40px;\\n    height: 40px;\\n}\\n.chat-content h3{\\n    margin: 0 0 5px;\\n    font-size: 16px;\\n    font-weight: bold;\\n    color: #3c8dbc;\\n}\\n.chat-content h3 span{\\n    float: right;\\n    font-weight: normal;\\n    font-size: 12px;\\n    color: #000;\\n}\\n.chat-list ul li:hover h3{\\n    color: #fff;\\n}\\n.chat-list ul li:hover h3 span{\\n    color: #fff;\\n}\\n.chat-list ul li:hover p{\\n    color: #fff;\\n}\\n.chat-box{\\n    padding: 20px;\\n}\\n.receiver, .sender{\\n    display: inline-block;\\n    width: 100%;\\n    padding: 20px 0;\\n}\\n.sender .chat-content{\\n    text-align: right;\\n    border-radius: 5px;\\n}\\n.receiver .chat-content{\\n    background: #3c8dbc;\\n    color: #fff;\\n    padding: 15px;\\n    border-radius: 5px;\\n}\\n.sender .chat-content p, .receiver .chat-content p {\\n    margin: 0;\\n}\\n.direct-chat-msg {\\n    margin-bottom: 20px;\\n}\\n.direct-chat-messages {\\n    height: 500px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/list-chat/list-chat.component.css\n// module id = ../../../../../src/app/core/layout/inner-pages/chats/list-chat/list-chat.component.css\n// module chunks = chats.module","module.exports = \"<div class=\\\"content-wrapper\\\">\\n  <section class=\\\"content-header\\\">\\n    <h1>Previous Chats</h1>\\n    <ol class=\\\"breadcrumb\\\">\\n      <li><a routerLink=\\\"/dashboard\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>\\n      <li><a routerLink=\\\"/chats/list-agent\\\">Chats</a></li>\\n      <li class=\\\"active\\\"><a href=\\\"javascript:void(0)\\\">View</a></li>\\n    </ol>\\n  </section>\\n  <section class=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12\\\">\\n        <div class=\\\"box\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row\\\">\\n              <h2>Messages</h2>\\n            </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"!!(showChats() | async).length\\\">\\n              <div class=\\\"col-md-3 col-sm-3\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"chat-list\\\">\\n                    <ul>\\n                      <ng-container *ngFor=\\\"let contact of (chatState | async).chatList; let i = index;\\\">\\n                        <li [ngClass]=\\\"{ active : currentChatIndex == i}\\\"\\n                            (click)=\\\"changeCurrentChat(i)\\\">\\n                          <div class=\\\"col-md-2\\\">\\n                            <div class=\\\"chat-head row\\\">\\n                              <img src=\\\"../../../../assets/img/avatar5.png\\\" class=\\\"img-responsive\\\">\\n                            </div>\\n                          </div>\\n                          <div class=\\\"col-md-10\\\">\\n                            <div class=\\\"chat-content\\\">\\n                              <h3>{{contact.client_name}} <span>{{contact.chat_time?.date | amFromUtc | amLocal | amTimeAgo}}</span> </h3>\\n                              <p>{{contact.name}}</p>\\n                            </div>\\n                          </div>\\n                        </li>\\n                      </ng-container>\\n                    </ul>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-9 col-sm-9\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"box box-primary direct-chat direct-chat-primary\\\">\\n                    <div class=\\\"box-body\\\">\\n                      <!-- Conversations are loaded here -->\\n                      <div class=\\\"direct-chat-messages\\\">\\n                        <!-- Message. Default to the left -->\\n                        <div class=\\\"direct-chat-msg\\\" [ngClass]=\\\"{ right: chat.direction == 2 }\\\" *ngFor=\\\"let chat of (chatState | async).chatList[currentChatIndex]?.chats\\\">\\n                          <div class=\\\"direct-chat-info clearfix\\\">\\n                            <span class=\\\"direct-chat-name\\\" [ngClass]=\\\"chat.direction == 2 ? 'pull-right' : 'pull-left'\\\">{{chat.user}}</span>\\n                            <span class=\\\"direct-chat-timestamp\\\" [ngClass]=\\\"chat.direction == 1 ? 'pull-right' : 'pull-left'\\\"> {{chat.created_at.date  | amFromUtc | amLocal | amDateFormat:'MMMM Do YYYY, h:mm:ss a'}} </span>\\n                          </div>\\n                          <img class=\\\"direct-chat-img\\\" [src]=\\\"chat.direction == 2 ?  '../../../../assets/img/user1-128x128.jpg' : '../../../../assets/img/user3-128x128.jpg'\\\" alt=\\\"Message User Image\\\"><!-- /.direct-chat-img -->\\n                          <div class=\\\"direct-chat-text\\\">\\n                            {{chat.message}}\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\" *ngIf=\\\"!(showChats() | async).length\\\">\\n              <div class=\\\"box box-primary\\\">\\n                <div class=\\\"box-body\\\" >\\n                  <div class=\\\"col-md-9 col-sm-9\\\">\\n                    <div class=\\\"col-md-5 col-sm-5\\\">\\n                      <h4>No chats found at the moment!</h4>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n        <!-- /.box -->\\n      </div>\\n      <!-- /.col -->\\n    </div>\\n    <!-- /.row -->\\n  </section>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/list-chat/list-chat.component.html\n// module id = ../../../../../src/app/core/layout/inner-pages/chats/list-chat/list-chat.component.html\n// module chunks = chats.module","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ActivatedRoute, Data ,Router} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs/Subscription';\nimport * as fromAfterLogin from '../../../store/after-login.reducers';\nimport * as ChatActions from '../../../store/chat/chat.actions';\nimport * as fromChat from '../../../store/chat/chat.reducers';\n\n@Component({\n  selector: 'app-list-chat',\n  templateUrl: './list-chat.component.html',\n  styleUrls: ['./list-chat.component.css']\n})\nexport class ListChatComponent implements OnInit {\n\n  /** Variable declaration */\n  agentId : number;\n  currentChatIndex: number = 0;\n  chatState: Observable<fromChat.ChatState>;\n\n  /** Service injection */\n  constructor(private store: Store<fromAfterLogin.AfterLoginFeatureState>,\n              private activatedRoute: ActivatedRoute,private router: Router) { }\n\n\n  ngOnInit() {\n    this.chatState = this.store.select('afterLogin')\n          .map(data => data.chat);\n\n    this.activatedRoute.params\n        .subscribe(\n            (id: any) => {\n              this.agentId = this.activatedRoute.snapshot.params['id'];\n              this.store.dispatch(new ChatActions.GetChatListAttempt({ agentId : id}));\n            }\n        );\n\n  }\n\n  changeCurrentChat(i: number) {\n    this.currentChatIndex = i;\n  }\n\n  showChats() {\n    return this.store.select('afterLogin')\n        .map(data => data.chat)\n        .map(chats => chats.chatList);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/html/3c/resources/assets/frontend/src/app/core/layout/inner-pages/chats/list-chat/list-chat.component.ts"],"sourceRoot":"webpack:///"}